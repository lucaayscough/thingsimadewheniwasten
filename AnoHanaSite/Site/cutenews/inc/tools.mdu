<?PHP
if($member_db[1] != 1){
	msg('error', 'Access Denied', 'You don\'t have permission for this section');
}
$success = FALSE;

// *********
// Archive
// *********
if($action == 'archive'){
	CSRF_create('archive');

	// *********
	// Un-archive
	// *********
	if($subaction == 'unarchive' and $aid != '' and isset($aid)){
		if(strpos($aid, '/') !== false || strpos($aid, '.') !== false){
			utf8_hardlog($member_db[2], 'invalid_aid['.$aid.']');
			msg('error', 'Error!', '?aid may not contain the character . or /', '?mod=tools&action=archive');
		}

		if(!$handle = opendir("$cutepath/data/archives")){
			die('<center>Unable to open directory '.htmlentities($cutepath).'/data/archive</center>');
		}
		while(false !== ($file = readdir($handle))){
			if($file == $aid.'.news.arch'){
				$newsfile = fopen($cutepath.'/data/news.txt', 'a');
				$newsarch = file($cutepath.'/data/archives/'.$file);
				foreach($newsarch as $newsline){
					fwrite($newsfile, $newsline);
				}
				fclose($newsfile);
				unlink($cutepath.'/data/archives/'.$file);
			}
			else if($file == $aid.'.comments.arch'){
				$commfile = fopen($cutepath.'/data/comments.txt', 'a');
				$commarch = file($cutepath.'/data/archives/'.$file);
				foreach($commarch as $commline){
					fwrite($commfile, $commline);
				}
				fclose($commfile);
				unlink($cutepath.'/data/archives/'.$file);
			}
		}
		closedir($handle);
		utf8_hardlog($member_db[2], 'archive_poof['.$aid.']');
	}

	echoheader('archives', 'Archives');

echo<<<HTML

<script language="javascript">
function confirmdelete(id,news){
	var agree=confirm("Do you really want to permanently delete this archive ?\\nAll ("+news+") news and comments in it will be deleted.");
	if (agree)
	document.location="$PHP_SELF?mod=tools&conf={$__archive}&action=dodeletearchive&archive="+id;
}
</script>
<form method=post action="$PHP_SELF"><table border=0 cellpading=0 cellspacing=0 width="645">
<td width=321 height="33"><b>Send news to archive</b>
<table border=0 cellpading=0 cellspacing=0 width=300  class="panel" cellpadding="10">
	<tr>
	<td width=304 height="25">
	<p align="center">
	<input type=submit value="Proceed with archiving ...">
	</tr>

</table>
<input type=hidden name=action value=doarchive>
<input type=hidden name=token value="{$__archive}">
<input type=hidden name=mod value=tools>
</form>

<td width=320 height="33" align="center">
<!-- HELP -->

<table height="25" cellspacing="0" cellpadding="0">
	<tr>
	<td width="25" align=middle><img border="0" src="skins/images/help_small.gif"></td>
	<td>&nbsp;<a onClick="javascript:Help('archives')" href="#">Explaining archives and<br>
	&nbsp;Their usage</a></td>
	</tr>
</table>

<tr>
<td width=654 colspan="2" height="11">
<img height=20 border=0 src="skins/images/blank.gif" width=1>
<br></td></tr>
<tr>
<td width=654 colspan=2 height=14>
<b>Available archives</b>
</tr>
<tr>

<td width=654 colspan=2 height=1>
<table width=641 height=100% cellspacing=0 cellpadding=0>
<tr>
	<td width=8 bgcolor=#F7F6F4>&nbsp;</td>
	<td width=160 bgcolor=#F7F6F4><u>archivation date</u></td>
	<td width=222 bgcolor=#F7F6F4><u>duration</u></td>
	<td width=81 bgcolor=#F7F6F4><u>news</u></td>
	<td width=110 bgcolor=#F7F6F4><u><!--action--></u></td>
</tr>
HTML;

	if(!$handle = opendir('./data/archives')){
		die('<center>Can not open directory '.htmlentities($cutepath).'/data/archives ');
	}
	while(false !== ($file = readdir($handle))){
		if($file != '.' and $file != '..' and !is_dir('./data/archives/'.$file) and substr($file, -9) == 'news.arch'){
			$file_arr = explode('.', $file);
			$id = $file_arr[0];

			$news_lines = file('./data/archives/'.$file);
			$creation_date = date('d F Y', (int)$file_arr[0]);
			$count = count($news_lines);
			$last = $count-1;
			$first_news_arr = explode('|', $news_lines[$last]);
			$last_news_arr = explode('|', $news_lines[0]);

			$first_timestamp = $first_news_arr[0];
			$last_timestamp = $last_news_arr[0];

			$duration = (date('d M Y', (int)$first_timestamp) .' - '. date('d M Y', (int)$last_timestamp));
			echo "<tr>
<td></td>
<td>$creation_date</td>
<td>$duration</td>
<td>$count</td>
<td><a title='Edit the news in this archive' href=\"$PHP_SELF?mod=editnews&action=list&source=$id\">[edit]</a>  <a title='restore news from this archive to active news' href=\"$PHP_SELF?mod=tools&action=archive&subaction=unarchive&aid=$id\">[unarchive]</a>  <a title='Delete this archive' onClick=\"javascript:confirmdelete('$id', '$count');\" href=\"#\">[delete]</a></td>
</tr>";
		}
	}
	closedir($handle);

	if($count == 0){
		echo '<tr><td align=center colspan=6><br>There are no archives</td></tr>';
	}

	echo '</table></table>';
	echofooter();
}
// ***********
// Make archive
// ***********
elseif($action == 'doarchive'){
	CSRF_check('archive', $_POST['token'], 10);

	if(filesize('./data/news.txt') == 0){
		msg('error', 'Error !!!', 'Sorry but there is no news to be archived', $PHP_SELF.'?mod=tools&action=archive');
	}
	if(filesize('./data/comments.txt') == 0){
		msg('error', 'Error !!!', 'The comments file is empty and cannot be archived', $PHP_SELF.'?mod=tools&action=archive');
	}

	$arch_name = time() + ($config_date_adjust*60);
	if(!@copy('./data/news.txt', './data/archives/'.$arch_name.'.news.arch')){
		msg('error', 'Error !!!', 'Cannot create file ./data/archives/'.htmlentities($arch_name).'.news.arch', $PHP_SELF.'?mod=tools&action=archive');
	}
	if(!@copy('./data/comments.txt', './data/archives/'.$arch_name.'.comments.arch')){
		msg('error', 'Error !!!', 'Can not create file ./data/archives/'.htmlentities($arch_name).'.comments.arch', $PHP_SELF.'?mod=tools&action=archive');
	}

	$handle = fopen('./data/news.txt', 'w');
	fclose($handle);
	$handle = fopen('./data/comments.txt', 'w');
	fclose($handle);

	utf8_hardlog($member_db[2], 'archive_new['.$arch_name.']');
	msg('archives', 'Archive Saved', '&nbsp&nbsp; All active news were successfully added to archives file with name  <b>'.$arch_name.'.news.arch</b>', $PHP_SELF.'?mod=tools&action=archive');
}
// ************
// Do delete archive
// ************
elseif($action == 'dodeletearchive'){
	CSRF_check('archive', $_GET['conf'], 5);
	$archive = $_GET['archive'];
	$success = 0;
	if(!$handle = opendir('./data/archives')){
		die('<center>Can not open directory '.htmlentities($cutepath).'/data/archive ');
	}
	while(false !== ($file = readdir($handle))){
		if($file == $archive.'.news.arch' || $file == $archive.'.comments.arch'){
			unlink('./data/archives/'.$file);
			$success++;
		}
	}
	closedir($handle);

	if($success == 2){
		utf8_hardlog($member_db[2], 'archive_del['.$archive.']');
		msg('info', 'Archive Deleted', 'The archive was successfully deleted', $PHP_SELF.'?mod=tools&action=archive');
	}
	elseif($success == 1){
		utf8_hardlog($member_db[2], 'archive_del_err['.$archive.']');
		msg('error', 'Error !!!', 'Either the comments part or the news part of the archive was not deleted', $PHP_SELF.'?mod=tools&action=archive');
	}
	else{
		msg('error', 'Error !!!', 'The archive you specified was not deleted, it is not on the server or you don\'t have permissions to delete it', $PHP_SELF.'?mod=tools&action=archive');
	}
}
// **************
// Backup news and archives
// **************
elseif($action == 'backup'){
	CSRF_create('backup');
	echoheader('options', 'Backup');
	echo '<script language="javascript">
function confirmdelete(id){
	var agree=confirm("Do you really want to permanently delete this backup ?");
	if (agree)
	document.location="'.$PHP_SELF.'?mod=tools&conf='.$__backup.'&action=dodeletebackup&backup="+id;
}
function confirmrestore(id){
	var agree=confirm("Do you really want to restore your news from this backup ?\nAll current news and archives will be overwritten.");
	if (agree)
	document.location="'.$PHP_SELF.'?mod=tools&conf='.$__backup.'&action=dorestorebackup&backup="+id;
}
</script>
<table border=0 cellpading=0 cellspacing=0 width="645" >
 <td width=321 height="33">
 <b>Create BackUp</b>
 <table border=0 cellpading=0 cellspacing=0 class="panel" cellpadding="10" width="390" >
	<form method=post action="'.$PHP_SELF.'">
	<tr>
	<td height="25" width="366">Name of the BackUp: <input type=text name=back_name>&nbsp; <input type=submit value=" Proceed ">
	</td>
	</tr>
	<input type=hidden name=action value=dobackup>
	<input type=hidden name=mod value=tools>
 </form>
 </table>
<tr>
<td width=654 height="11">
 <img height=20 border=0 src="skins/images/blank.gif" width=1>
 <br></tr>
 <tr>
 <td width=654 height=14>
    <b>Available BackUps</b>
    </tr>
    <tr>
        <td width=654 height=1>
 <table width=641 height=100% cellspacing=0 cellpadding=0>
 <tr>
	<td width=2% bgcolor=#F7F6F4>&nbsp;</td>
	<td width=40% bgcolor=#F7F6F4><u>name</u></td>
	<td width=22% bgcolor=#F7F6F4><u>active news</u></td>
	<td width=16% bgcolor=#F7F6F4><u>archives</u></td>
	<td width=20% bgcolor=#F7F6F4><u>action</u></td>
 </tr>';

	$count = 0;
	if(!$handle = opendir('./data/backup')){
		die('<center>Can not open directory '.htmlentities($cutepath).'/data/backup ');
	}
	while(false !== ($file = readdir($handle))){
		if($file != '.' and $file != '..' and is_dir('./data/backup/'.$file)){
			$archives_count = 0;
			$archives_handle = @opendir('./data/backup/'.$file.'/archives');
			while(false !== ($arch = readdir($archives_handle))){
				if(substr($arch, -9) == 'news.arch'){
					$archives_count++;
				}
			}
			closedir($archives_handle);

			$news_count = count(file('./data/backup/'.$file.'/news.txt'));
			echo "<tr>
                                      <td></td>
                                      <td>$file</td>
                      <td>&nbsp;$news_count</td>
                      <td>&nbsp;$archives_count</td>
                                      <td><a onClick=\"javascript:confirmdelete('$file'); return(false)\" href=\"$PHP_SELF?mod=tools&action=dodeletebackup&backup=$file\">[delete]</a> <a onClick=\"javascript:confirmrestore('$file'); return(false)\" href=\"$PHP_SELF?mod=tools&action=dorestorebackup&backup=$file\">[restore]</a></td>
			   </tr>";
			$count++;
		}
	}
	closedir($handle);

	if($count == 0){
		echo "<tr><td colspan=5><p align=center><br>There are no backups</p></td></tr>";
	}

	echo '</table></table>';
	echofooter();
}

// **************
// Do delete backup
// **************
elseif($action == 'dodeletebackup'){
	CSRF_check('backup', $_GET['conf'], 10);
	$backup = $_GET['backup'];

	if(strpos($backup, '.') !== false || strpos($backup, '/') !== false){
		msg('error', 'Error!', 'Invalid backup name! Backup may not contain dots (.) or slashes (/)', '?mod=tools&action=backup');
	}
	function listdir($dir){
		$current_dir = opendir($dir);
		while($entryname = readdir($current_dir)){
			if(is_dir($dir.'/'.$entryname) and ($entryname != '.' and $entryname != '..')){
				listdir("${dir}/${entryname}");
			}
			else if($entryname != '.' and $entryname != '..'){
				unlink("${dir}/${entryname}");
			}
		}
		@closedir($current_dir);
		rmdir($dir);
	}
	if(file_exists('./data/backup/'.$backup)){
		listdir('./data/backup/'.$backup);
		utf8_hardlog($member_db[2], 'backup_del['.$backup.']');
		msg('info', 'Backup Deleted', 'The backup was successfully deleted.', $PHP_SELF.'?mod=tools&action=backup');
	}
	else{
		utf8_hardlog($member_db[2], 'backup_del_fail['.$backup.']');
		msg('error', 'Error!', 'Sorry, but the selected backup does not exist.', '?mod=tools&action=backup');
	}
}

// ************
// Restore backup
// ************
elseif($action == 'dorestorebackup'){
	CSRF_check('backup', $_GET['conf'], 10);
	$backup = $_GET['backup'];
	if(strpos($backup, '.') !== false || strpos($backup, '/')){
		utf8_hardlog($member_db[2], 'invalid_backup['.$backup.']');
		msg('error', 'Error!', 'Invalid characters in ?backup', '?mod=tools&action=backup');
	}

	if(!@copy('./data/backup/'.$backup.'/news.txt', './data/news.txt')){
		msg('error', 'error', './data/backup/'.$backup.'/news.txt', $PHP_SELF.'?mod=tools&action=backup');
	}
	if(!@copy('./data/backup/'.$backup.'/comments.txt', './data/comments.txt')){
		msg('error', 'error', './data/backup/'.$backup.'/comments.txt', $PHP_SELF.'?mod=tools&action=backup');
	}

	$dirp = opendir("./data/backup/$backup/archives");
	while($entryname = readdir($dirp)){
		if(!is_dir("./data/backup/$backup/archives/$entryname") and $entryname != '.' and $entryname != '..'){
			if(!@copy("./data/backup/$backup/archives/$entryname", "./data/archives/$entryname")){
				msg('error', 'error', 'Can not copy ./data/backup/'.$backup.'/archives/'.$entryname);
			}
		}
	}

	utf8_hardlog($member_db[2], 'backup_restore['.$backup.']');
	msg('info', 'Backup Restored', 'The backup was successfully restored.', $PHP_SELF.'?mod=tools&action=backup');
}
// **************
// make the back-up
// **************
elseif($action == 'dobackup'){
	$back_name = str_replace(' ', '-', trim($back_name));

	if(filesize('./data/news.txt') == 0){
		msg('error', 'Error !!!', 'The news file is empty and can not be backed up', $PHP_SELF.'?mod=tools&action=backup');
	}
	if(filesize('./data/comments.txt') == 0){
		msg('error', 'Error !!!', 'The comments file is empty and cannot be backed up', $PHP_SELF.'?mod=tools&action=backup');
	}
	if(preg_match('/[^a-z0-9-_]/i', $back_name)){
		utf8_hardlog($member_db[2], 'backup_new_fail['.$back_name.']');
		msg('error', 'Error !!!', 'Invalid backup name. Only a-z, 0-9 - and _ allowed in name', '?mod=tools&action=backup');
	}
	if(is_readable('./data/backup/'.$back_name)){
		msg('error', 'Error !!!', 'A backup with this name already exists', $PHP_SELF.'?mod=tools&action=backup');
	}
	if(!is_readable('./data/backup')){
		mkdir('./backup', 0777);
	}
	if(!is_writable('./data/backup')){
		msg('error', 'Error !!!', 'The directory ./data/backup is not writable, please chmod it');
	}
	mkdir('./data/backup/'.$back_name, 0777);
	mkdir('./data/backup/'.$back_name.'/archives', 0777);

	if(!@copy('./data/news.txt', './data/backup/'.$back_name.'/news.txt')){
		die('Cannot copy news.txt file to ./data/backup/'.htmlentities($back_name).' :(');
	}
	if(!@copy('./data/comments.txt', './data/backup/'.$back_name.'/comments.txt')){
		die('Cannot copy comments.txt file to ./data/backup/'.htmlentities($back_name).' :(');
	}

	if(!$handle = opendir('./data/archives')){
		die('Cannot create file');
	}
	while(false !== ($file = readdir($handle))){
		if($file != '.' and $file != '..'){
			if(!@copy('./data/archives/'.$file, './data/backup/'.$back_name.'/archives/'.$file)){
				die("Cannot copy archive file to ./data/backup/$back_name/archives/$file :(");
			}
		}
	}
	closedir($handle);

	utf8_hardlog($member_db[2], 'backup_new['.$back_name.']');
	msg('info', 'Backup', 'All news and archives were successfully backed up in directory /data/backup/'.$back_name, $PHP_SELF.'?mod=tools&action=backup');
}
?>